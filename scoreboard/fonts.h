/**
 * fonts.h
 * 
 * @author:   Will Patton 
 * @url:      http://github.com/willpatton
 * @license:  MIT License
 * 
 * Fonts are defined as an array of bytes (35 bytes per char).  
 * Each font is a 5x7 array to match the pixels in a digit.
 * 
 * TODO - Fonts could be optimized to be an array of "bits".
 *
 */

/**
 * 1x4 fonts
 */
byte colon[] = {
  1,1,1,1
};


/**
 * 5x7 fonts
 */

byte space[] = {
  0,0,0,0,0,
  0,0,0,0,0,
  0,0,0,0,0,
  0,0,0,0,0,
  0,0,0,0,0,
  0,0,0,0,0,
  0,0,0,0,0
};
 
byte zero[] = {
  0,1,1,1,0,
  1,0,0,0,1,
  1,0,0,1,1,
  1,0,1,0,1,
  1,1,0,0,1,
  1,0,0,0,1,
  0,1,1,1,0
};

byte one[] = {
  0,0,0,1,0,
  0,0,1,1,0,
  0,0,0,1,0,
  0,0,0,1,0,
  0,0,0,1,0,
  0,0,0,1,0,
  0,0,1,1,1
};

byte two[] = {
  0,1,1,1,0,
  1,0,0,0,1,
  0,0,0,0,1,
  0,0,1,1,0,
  0,1,0,0,0,
  1,0,0,0,0,
  1,1,1,1,1
};

byte three[] = {
  0,1,1,1,0,
  1,0,0,0,1,
  0,0,0,0,1,
  0,0,1,1,0,
  0,0,0,0,1,
  1,0,0,0,1,
  0,1,1,1,0
};

byte four[] = {
  0,0,0,1,0,
  0,0,1,1,0,
  0,1,0,1,0,
  1,0,0,1,0,
  1,1,1,1,1,
  0,0,0,1,0,
  0,0,0,1,0
};

byte five[] = {
  1,1,1,1,1,
  1,0,0,0,0,
  1,1,1,1,0,
  0,0,0,0,1,
  0,0,0,0,1,
  1,0,0,0,1,
  0,1,1,1,0
};
byte six[] = {
  0,0,1,1,0,
  0,1,0,0,1,
  1,0,0,0,0,
  1,1,1,1,0,
  1,0,0,0,1,
  1,0,0,0,1,
  0,1,1,1,0
};
byte seven[] = {
  1,1,1,1,1,
  0,0,0,0,1,
  0,0,0,1,1,
  0,0,1,0,0,
  0,1,0,0,0,
  0,1,0,0,0,
  0,1,0,0,0
};
byte eight[] = {
  0,1,1,1,0,
  1,0,0,0,1,
  1,0,0,0,1,
  0,1,1,1,0,
  1,0,0,0,1,
  1,0,0,0,1,
  0,1,1,1,0
};
byte nine[] = {
  0,1,1,1,0,
  1,0,0,0,1,
  1,0,0,0,1,
  0,1,1,1,1,
  0,0,0,0,1,
  0,0,0,1,0,
  0,1,1,0,0
};

byte A_A[] = {
  0,0,1,0,0,
  0,1,0,1,0,
  1,0,0,0,1,
  1,1,1,1,1,
  1,0,0,0,1,
  1,0,0,0,1,
  1,0,0,0,1
};

byte B_B[] = {
  1,1,1,1,0,
  0,1,0,0,1,
  0,1,0,0,1,
  0,1,1,1,0,
  0,1,0,0,1,
  0,1,0,0,1,
  1,1,1,1,0
};

byte C_C[] = {
  0,1,1,1,0,
  1,0,0,0,1,
  1,0,0,0,0,
  1,0,0,0,0,
  1,0,0,0,0,
  1,0,0,0,1,
  0,1,1,1,0
};
byte D_D[] = {
  1,1,1,1,0,
  0,1,0,0,1,
  0,1,0,0,1,
  0,1,0,0,1,
  0,1,0,0,1,
  0,1,0,0,1,
  1,1,1,1,0
};
byte P_P[] = {
  1,1,1,1,0,
  1,0,0,0,1,
  1,0,0,0,1,
  1,1,1,1,0,
  1,0,0,0,0,
  1,0,0,0,0,
  1,0,0,0,0
};
byte M_M[] = {
  1,0,0,0,1,
  1,1,0,1,1,
  1,0,1,0,1,
  1,0,1,0,1,
  1,0,0,0,1,
  1,0,0,0,1,
  1,0,0,0,1
};

byte _a[] = {
  0,0,0,0,0,
  0,0,0,0,0,
  0,1,1,1,0,
  0,0,0,0,1,
  0,1,1,1,1,
  1,0,0,0,1,
  0,1,1,0,1
};
byte _b[] = {
  1,0,0,0,0,
  1,0,0,0,0,
  1,0,1,1,0,
  1,1,0,0,1,
  1,0,0,0,1,
  1,0,0,0,1,
  1,1,1,1,0
};
byte _c[] = {
  0,0,0,0,0,
  0,0,0,0,0,
  0,1,1,1,0,
  1,0,0,0,0,
  1,0,0,0,0,
  1,0,0,0,1,
  0,1,1,1,0
};
byte _d[] = {
  0,0,0,0,1,
  0,0,0,0,1,
  0,1,1,0,1,
  1,0,0,1,1,
  1,0,0,0,1,
  1,0,0,0,1,
  0,1,1,1,1
};
